{"version":3,"sources":["components/Card.module.css","components/SearchBar.module.css","components/Style.module.css","components/About.module.css","components/Notification.module.css","components/Nav.jsx","components/Card.jsx","components/Cards.jsx","components/SearchBar.jsx","components/City.jsx","components/Notification.jsx","components/Main.jsx","components/About.jsx","containers/App.js","index.js","components/Nav.module.css"],"names":["module","exports","Nav","className","style","navBar","to","navButton","navButtonMobile","activeClassName","active","info","Card","temp","min","max","name","id","img","onClose","card","close","onClick","header","minMax","src","alt","Cards","cities","map","elem","key","SearchBar","onSearch","useState","city","setCity","type","value","onChange","e","target","onKeyDown","placeholder","button","City","search","Notification","mensaje","iteracion","opacity","fill","styles","notificacion","animationIterationCount","animationFillMode","Main","setCities","mostrar","setNotificacion","cards","oldCities","filter","ciudad","setTimeout","fetch","then","r","json","recurso","undefined","main","some","Math","floor","temp_min","ceil","temp_max","weather","icon","wind","speed","direction","deg","toFixed","weather2","description","clouds","all","latitud","coord","lat","longitud","lon","humedad","humidity","sensacionTermica","round","feels_like","pais","sys","country","About","container","about","volver","App","body","path","render","exact","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f1a1e76a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1YWnI\",\"fadeIn\":\"Card_fadeIn__1CfFb\",\"close\":\"Card_close__1yqoX\",\"header\":\"Card_header__26tYN\",\"temp\":\"Card_temp__1s7yw\",\"minMax\":\"Card_minMax__1Fmul\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"SearchBar_search__3gWjK\",\"button\":\"SearchBar_button__3C0DG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Style_body__VFcZn\",\"cards\":\"Style_cards__2xUaR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"About_container__KSTTs\",\"fadeIn\":\"About_fadeIn__2Ut5o\",\"about\":\"About_about__1N-jX\",\"volver\":\"About_volver__1dLc3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notificacion\":\"Notification_notificacion__3T1BL\",\"fade\":\"Notification_fade__1f4FZ\"};","import React from 'react';\r\n// import SearchBar from './SearchBar.jsx';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport style from '../components/Nav.module.css';\r\nimport { VscHome, VscInfo } from 'react-icons/vsc';\r\n\r\nfunction Nav() {\r\n  return (\r\n    <div className={style.navBar}>\r\n      <Link to='/'>\r\n        <span className={style.navButton}>Weather App</span>\r\n      </Link>\r\n      <Link to='/'>\r\n        <button className={style.navButtonMobile}>\r\n          <VscHome />\r\n        </button>\r\n      </Link>\r\n      <NavLink to='/about' activeClassName={style.active}>\r\n        <span className={style.navButton}>Acerca de</span>\r\n      </NavLink>\r\n      <NavLink to='/about' activeClassName={`${style.active} ${style.info}`}>\r\n        <button className={style.navButtonMobile}>\r\n          <VscInfo />\r\n        </button>\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport style from './Card.module.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Card({temp, min, max, name, id, img, onClose}) {\r\n  // acá va tu código\r\n\r\n  return (<div className={style.card}>\r\n        <button className={style.close} onClick={() => onClose(id)}>+</button>\r\n    <Link to={`/ciudad/${id}`} >\r\n      <div className={style.header}>\r\n          <h2> {name}</h2>\r\n      </div>\r\n      <div className={style.temp}>\r\n        <div>\r\n          <h3>{temp}ºC</h3>\r\n        </div>\r\n        <div className={style.minMax}>\r\n          <div>Max {max}ºC</div>\r\n          <div>Min {min}ºC</div>\r\n        </div>\r\n        <img src={`https://openweathermap.org/img/wn/${img}@2x.png`} alt=\"\"/>\r\n      </div>\r\n    </Link>\r\n  </div>)\r\n};","import React from 'react';\r\nimport Card from './Card.jsx';\r\n\r\nexport default function Cards({cities, onClose}) {\r\n  // acá va tu código\r\n  // tip, podés usar un map\r\n  return cities.map(function (elem) {\r\n    return (\r\n    <div key={elem.id}>\r\n      <Card \r\n        id={elem.id}\r\n        name={elem.name}\r\n        max={elem.max}\r\n        min={elem.min}\r\n        img={elem.img}\r\n        temp={elem.temp}\r\n        onClose={onClose}>\r\n      </Card>\r\n    </div>)\r\n  })\r\n};","import React, { useState } from 'react';\r\nimport style from '../components/SearchBar.module.css';\r\nimport { VscAdd } from 'react-icons/vsc';\r\n\r\nexport default function SearchBar({ onSearch }) {\r\n  let [city, setCity] = useState('');\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type='text'\r\n        value={city}\r\n        onChange={(e) => setCity(e.target.value)}\r\n        onKeyDown={(e) => {\r\n          if (e.key === 'Enter') {\r\n            onSearch(city);\r\n            setCity('');\r\n          }\r\n        }}\r\n        placeholder='Agregar ciudad...'\r\n      />\r\n      <button\r\n        className={style.button}\r\n        onClick={() => {\r\n          onSearch(city);\r\n          setCity('');\r\n        }}>\r\n        <VscAdd />\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\n//? Components\r\nimport SearchBar from './SearchBar';\r\n\r\n//? Module CSS\r\nimport style from './SearchBar.module.css';\r\n\r\nfunction City({ onSearch }) {\r\n  return (\r\n    <div>\r\n      <div className={style.search}>\r\n        <SearchBar onSearch={onSearch} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default City;\r\n","import React from 'react';\r\nimport styles from './Notification.module.css';\r\n\r\nconst Notification = ({ mensaje, iteracion, opacity, fill }) => {\r\n  return (\r\n    <div className={styles.notificacion} style={{ opacity: opacity, animationIterationCount: iteracion, animationFillMode: fill }}>\r\n      {mensaje}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState } from 'react';\r\n\r\n//? Components\r\nimport Cards from './Cards';\r\nimport City from './City';\r\nimport Notification from './Notification';\r\n\r\n//? Module CSS\r\nimport style from './Style.module.css';\r\n\r\nfunction Main() {\r\n\r\n  //* Cities state where all city cards/info is storaged\r\n  const [cities, setCities] = useState([]);\r\n\r\n  //* Notification state where information about server is displayed to the user\r\n  const [notificacion, setNotificacion] = useState({mensaje: \"Agregá ciudades ↑\", mostrar: true, iteracion: 7, opacity: 1, fill: \"initial\"});\r\n\r\n  // var timeoutId;\r\n\r\n  function onClose(id) {\r\n    setCities(oldCities => oldCities.filter(city => city.id !== id));\r\n    // setNotificacion({...notificacion, mostrar: false}); // ← Solo una manera de limpiar la pantalla una vez que le usuarie interactue... una vez que aprenda a cronometrar la notifiación para que desaparezca automáticamente según el mensaje, no hará falta esta línea\r\n    // setTimeout(() => setNotificacion({...notificacion, mostrar: false}), 2500)\r\n  }\r\n  function onSearch(ciudad) {\r\n    //Llamado a la API del clima\r\n    // if (timeoutId) clearTimeout(timeoutId);\r\n    if (ciudad === '') {\r\n      // timeoutId = setTimeout(() => setNotificacion({...notificacion, mostrar: false}), 3500)\r\n      setNotificacion({mensaje: \"Debes introducir el nombre de una ciudad\", mostrar: true, iteracion: 8, opacity: 0});\r\n      setTimeout(() => setNotificacion({...notificacion, mostrar: false, opacity: 1, fill: \"initial\"}), 4200)\r\n      return;\r\n    }\r\n    else \r\n    setNotificacion({mensaje: `Buscando \"${ciudad}\"...`, mostrar: true})\r\n    // setTimeout(() => setNotificacion({...notificacion, mostrar: false}), 3000)\r\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=4ae2636d8dfbdc3044bede63951a019b&units=metric&lang=sp`)\r\n      .then(r => r.json())\r\n      .then((recurso) => {\r\n        if(recurso.main !== undefined){\r\n          if (cities.some((elem) => elem.name === recurso.name)) {\r\n            // if (timeoutId) clearTimeout(timeoutId);\r\n            // timeoutId = setTimeout(() => setNotificacion({...notificacion, mostrar: false}), 3000)\r\n            setNotificacion({mensaje: `¡Ya hay tarjeta de ${recurso.name}!`, mostrar: true, iteracion: 8, opacity: 0});\r\n            setTimeout(() => setNotificacion({...notificacion, mostrar: false}), 4200)\r\n            // setTimeout(() => setNotificacion({...notificacion, mostrar: false}), 3500)\r\n          } \r\n          else {\r\n            const ciudad = {\r\n              min: Math.floor(recurso.main.temp_min),\r\n              max: Math.ceil(recurso.main.temp_max),\r\n              img: recurso.weather[0].icon,\r\n              id: recurso.id,\r\n              wind: recurso.wind.speed,\r\n              direction: recurso.wind.deg,\r\n              temp: recurso.main.temp.toFixed(1),\r\n              name: recurso.name,\r\n              weather: recurso.weather[0].main,\r\n              weather2: recurso.weather[0].description,\r\n              clouds: recurso.clouds.all,\r\n              latitud: recurso.coord.lat,\r\n              longitud: recurso.coord.lon,\r\n              humedad: recurso.main.humidity,\r\n              sensacionTermica: Math.round(recurso.main.feels_like),\r\n              pais: recurso.sys.country\r\n            };\r\n            setCities(oldCities => [...oldCities, ciudad]);\r\n            setNotificacion({...notificacion, mostrar: false})\r\n          }\r\n        } else {\r\n          // if (timeoutId) clearTimeout(timeoutId);\r\n          setNotificacion({mensaje: `No se encontró la ciudad \"${ciudad}\"`, mostrar: true, iteracion: 7, opacity: 1});\r\n          // setTimeout(() => setNotificacion({...notificacion, mostrar: false}), 3500)\r\n          // setTimeout(() => setNotificacion({...notificacion, mostrar: false}), 3500)\r\n          return;\r\n        }\r\n      });\r\n  }\r\n  // function onFilter(ciudadId) {\r\n  //   let ciudad = cities.filter(c => c.id === parseInt(ciudadId));\r\n  //   if(ciudad.length > 0) {\r\n  //     return ciudad[0];\r\n  //   } else {\r\n  //     return null;\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <div className={style.cards}>\r\n        {notificacion.mostrar ? (\r\n          <Notification mensaje={notificacion.mensaje} iteracion={notificacion.iteracion} opacity={notificacion.opacity} fill={notificacion.fill} />\r\n        ) : null}\r\n        <Cards cities={cities} onClose={onClose} setNotificacion={setNotificacion} />\r\n      </div>\r\n      <City onSearch={onSearch} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport style from './About.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { VscArrowLeft } from 'react-icons/vsc';\r\n\r\nfunction About() {\r\n  return (\r\n    <div className={style.container}>\r\n      <div className={style.about}>\r\n        <Link to='/'>\r\n          <button className={style.volver}>\r\n            <VscArrowLeft />\r\n          </button>\r\n        </Link>\r\n        <div>\r\n          ¿Quieres saber qué temperatura hace en tu ciudad, y en cualquier parte del mundo? Escribe los nombres de las ciudades que quieras en la\r\n          barra de búsqueda y se generará una tarjeta por cada una de ellas. ¿Quieres más detalles? haz click en cualquiera de las tarjetas que\r\n          generaste para ampliar la información del clima de esa ciudad. — WeatherApp es una aplicación de página única (React SPA) creada por Franco\r\n          Aparicio, alumne del bootcamp soyHenry.com. La aplicación brinda información en tiempo real del clima (extraída de openweathermap.org) de\r\n          cualquier ciudad del mundo. <br />\r\n          <br />\r\n          <hr />\r\n          <br />\r\n          Would you like to know how's the weather in your city? or any city in the world, actually! Just type in their names in the search bar above,\r\n          it will create a card for each one of them showing the main information. Would you like to see more details? Click in any of your city-cards\r\n          to expand the weather information of that city. — WeatherApp is a React single-page app created by Franco Aparicio, student of\r\n          soyHenry.com's bootcamp. The app offers real-time weather information (withdrawn from openweathermap.org) of any city in the world.\r\n          <br />\r\n          <br />\r\n          <hr />\r\n        </div>\r\n        <footer>\r\n          <br />\r\n          JULIO — AGOSTO / 2021\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\n//? Components\r\nimport Nav from '../components/Nav.jsx';\r\nimport Main from '../components/Main.jsx';\r\n// import Cards from '../components/Cards.jsx';\r\nimport About from '../components/About.jsx';\r\n// import Ciudad from '../components/Ciudad.jsx';\r\n// import Notification from '../components/Notification.jsx';\r\n\r\n//? Module CSS\r\nimport style from '../components/Style.module.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className={style.body}>\r\n      <Route\r\n        path='/'\r\n        render={() => <Nav />}\r\n      />\r\n      <Route \r\n        exact path='/'\r\n        render={Main}\r\n      /> \r\n      <Route\r\n        path='/about'\r\n        component={About}\r\n      />\r\n      {/* <Route\r\n        exact path='/ciudad/:ciudadId'\r\n        render={({match}) => <Ciudad\r\n          city={onFilter(match.params.ciudadId)}\r\n        />}\r\n      /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './containers/App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navButtonMobile\":\"Nav_navButtonMobile__1WpwG\",\"navBar\":\"Nav_navBar__3WvZ0\",\"navButton\":\"Nav_navButton__15cZp\",\"active\":\"Nav_active__1ydaI\",\"search\":\"Nav_search__12gpx\"};"],"sourceRoot":""}